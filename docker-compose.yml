version: '3.8'
services:
  javaback:
    # container_name: spring-app
    image: springbooot-app
    restart: always
    build: .
    ports:
      - 8181:8080
    environment:
      MYSQL_HOST: mysqldbb
      MYSQL_USER: root
      MYSQL_PASSWORD: 1901
      MYSQL_PORT: 3306

  mysqldbb:
    container_name: mysqldbb
    image: mysql
    ports:
      - 3307:3306
    environment:
      MYSQL_DATABASE: yandex_disk
      MYSQL_ROOT_PASSWORD: 1901

  pythonback:
    image: pythonclient:0.0.2
    build:
      context: /pythonback
      dockerfile: Dockerfile
    ports:
      - "8182:8182"
    depends_on:
      - mysqldbb
      - javaback
    environment:
      - DB_HOST=mysqldbb
      - DB_PORT=3306
      - DB_NAME=yandex_disk
      - DB_USER=root
      - DB_PASS=1901

#    environment:
#      - SERVER_PORT=8181
#      - SPRING_DATASOURCE_URL=jdbc:mysql://172.21.0.2:3306/yandex_disk
#      - spring.datasource.url=jdbc:mysql://localhost:3306/yandex_disk
#      - JAVAX.PERSISTENCE.JDBC.URL=jdbc:mysql://localhost:3306/yandex_disk
#      - hibernate.connection.url=jdbc:mysql://localhost:3306/yandex_disk
#      - hibernate.dialect=jdbc:mysql://localhost:3306/yandex_disk
#  msdb:
#    image: mysql
#    container_name: msdb
#    ports:
#      - 3307:3306
#    environment:
#      MYSQL_DATABASE: yandex_disk
#      MYSQL_ROOT_PASSWORD: 1901

#  javaaabackend:
#    image: javaclient:0.0.1
#    build:
#      context: /javaback
#      dockerfile: Dockerfile
#    ports:
#      - 8181:8080
#    depends_on:
#      - db
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:mysql://172.23.0.2:3306/yandex_disk
##      - SPRING.JPA.HIBERNATE.DDL-AUTO=update
#      - SPRING_DATASOURCE_USERNAME=root
#      - SPRING_DATASOURCE_PASSWORD=1901


#  mysqldb:
#    container_name: mysqldb
#    image: mysql
#    ports:
#      - 3307:3306
#    environment:
#      MYSQL_DATABASE: yandex_disk
#      MYSQL_ROOT_PASSWORD: 1901
#





#    volumes:
#      - /db/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
#      - /db/Dump1.sql:/docker-entrypoint-initdb.d/Dump1.sql
#    networks:
#      - my_network


#networks:
#  my_network:
#    driver: host

#    volumes:
#      - ./db/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
#      - db-data:/var/lib/postgresql/data

#    volumes:
#      -

#  service-db:
#    image: postgres:14.7-alpine
#    environment:
#      POSTGRES_USER: username
#      POSTGRES_PASSWORD: password
#    ports:
#      - "15432:5432"
#    volumes:
#      - ./infrastructure/db/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
#      - db-data:/var/lib/postgresql/data
#    restart: unless-stopped

#  pgadmin
#  container_name: pgadmin4_container
#  image: dpage/pgadmin4:7
#  restart: always
#  environment:
#    PGADMIN_DEFAULT_EMAIL: admin@admin.com
#    PGADMIN_DEFAULT_PASSWORD: root
#  ports:
#    - "5050:80"
#  volumes:
#    - pgadmin-data:/var/lib/pgadmin

#volumes:
#  db-data:
#  pgadmin-data: